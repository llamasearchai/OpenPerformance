name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  lint-type-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install package and dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          if [ "${{ matrix.python-version }}" = "3.12" ]; then pip install .[ml,gpu,dist]; fi

      - name: Lint (black + ruff)
        run: |
          black --check python/
          ruff check python/ tests/ python/tests/
          # ensure packaging metadata builds
          python -m build --sdist --wheel

      - name: Type check (mypy)
        run: |
          mypy python/mlperf --ignore-missing-imports

      - name: Run tests with coverage
        env:
          PYTHONWARNINGS: ignore::DeprecationWarning
        run: |
          pytest -v tests python/tests --cov=mlperf --cov-report=xml --cov-report=term-missing

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  codecov:
    needs: lint-type-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: .
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true